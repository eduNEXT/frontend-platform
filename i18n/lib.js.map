{"version":3,"sources":["../../src/i18n/lib.js"],"names":["PropTypes","addLocaleData","arLocale","enLocale","esLocale","frLocale","zhLocale","caLocale","heLocale","idLocale","koLocale","plLocale","ptLocale","ruLocale","thLocale","ukLocale","Cookies","merge","cookies","supportedLocales","rtlLocales","config","loggingService","messages","getLoggingService","LOCALE_TOPIC","LOCALE_CHANGED","getCookies","getPrimaryLanguageSubtag","code","split","findSupportedLocale","locale","undefined","getLocale","Error","cookieLangPref","get","LANGUAGE_PREFERENCE_COOKIE_NAME","toLowerCase","global","navigator","language","getMessages","isRtl","includes","handleRtl","document","getElementsByTagName","setAttribute","messagesShape","ar","objectOf","string","en","fr","ca","he","id","pl","ru","th","uk","optionsShape","object","isRequired","shape","logError","func","oneOfType","arrayOf","mergeMessages","messagesArray","Array","isArray","configure","options","checkPropTypes","ENVIRONMENT","Object","keys","forEach","key","indexOf","console","warn"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { addLocaleData } from 'react-intl';\nimport arLocale from 'react-intl/locale-data/ar';\nimport enLocale from 'react-intl/locale-data/en';\nimport esLocale from 'react-intl/locale-data/es';\nimport frLocale from 'react-intl/locale-data/fr';\nimport zhLocale from 'react-intl/locale-data/zh';\nimport caLocale from 'react-intl/locale-data/ca';\nimport heLocale from 'react-intl/locale-data/he';\nimport idLocale from 'react-intl/locale-data/id';\nimport koLocale from 'react-intl/locale-data/ko';\nimport plLocale from 'react-intl/locale-data/pl';\nimport ptLocale from 'react-intl/locale-data/pt';\nimport ruLocale from 'react-intl/locale-data/ru';\nimport thLocale from 'react-intl/locale-data/th';\nimport ukLocale from 'react-intl/locale-data/uk';\nimport Cookies from 'universal-cookie';\nimport merge from 'lodash.merge';\n\nconst cookies = new Cookies();\nconst supportedLocales = [\n  'ar', // Arabic\n  // NOTE: 'en' is not included in this list intentionally, since it's the fallback.\n  'es-419', // Spanish, Latin American\n  'fr', // French\n  'zh-cn', // Chinese, Simplified\n  'ca', // Catalan\n  'he', // Hebrew\n  'id', // Indonesian\n  'ko-kr', // Korean (Korea)\n  'pl', // Polish\n  'pt-br', // Portuguese (Brazil)\n  'ru', // Russian\n  'th', // Thai\n  'uk', // Ukrainian\n];\nconst rtlLocales = [\n  'ar', // Arabic\n  'he', // Hebrew\n  'fa', // Farsi (not currently supported)\n  'ur', // Urdu (not currently supported)\n];\n\nlet config = null;\nlet loggingService = null;\nlet messages = null;\n\n/**\n *\n * @ignore\n * @returns {LoggingService}\n *\n */\nexport const getLoggingService = () => loggingService;\n\n/**\n * @memberof module:Internationalization\n */\nexport const LOCALE_TOPIC = 'LOCALE';\n\n/**\n * @memberof module:Internationalization\n */\nexport const LOCALE_CHANGED = `${LOCALE_TOPIC}.CHANGED`;\n\n/**\n *\n * @memberof module:Internationalization\n * @returns {Cookies}\n */\nexport function getCookies() {\n  return cookies;\n}\n\naddLocaleData([\n  ...arLocale,\n  ...enLocale,\n  ...esLocale,\n  ...frLocale,\n  ...zhLocale,\n  ...caLocale,\n  ...heLocale,\n  ...idLocale,\n  ...koLocale,\n  ...plLocale,\n  ...ptLocale,\n  ...ruLocale,\n  ...thLocale,\n  ...ukLocale,\n]);\n\n/**\n * Some of our dependencies function on primary language subtags, rather than full locales.\n * This function strips a locale down to that first subtag.  Depending on the code, this\n * may be 2 or more characters.\n *\n * @param {string} code\n * @memberof module:Internationalization\n */\nexport function getPrimaryLanguageSubtag(code) {\n  return code.split('-')[0];\n}\n\n/**\n * Finds the closest supported locale to the one provided.  This is done in three steps:\n *\n * 1. Returning the locale itself if its exact language code is supported.\n * 2. Returning the primary language subtag of the language code if it is supported (ar for ar-eg,\n * for instance).\n * 3. Returning 'en' if neither of the above produce a supported locale.\n *\n * @param {string} locale\n * @returns {string}\n * @memberof module:Internationalization\n */\nexport function findSupportedLocale(locale) {\n  if (messages[locale] !== undefined) {\n    return locale;\n  }\n\n  if (messages[getPrimaryLanguageSubtag(locale)] !== undefined) {\n    return getPrimaryLanguageSubtag(locale);\n  }\n\n  return 'en';\n}\n\n/**\n * Get the locale from the cookie or, failing that, the browser setting.\n * Gracefully fall back to a more general primary language subtag or to English (en)\n * if we don't support that language.\n *\n * @param {string} locale If a locale is provided, returns the closest supported locale. Optional.\n * @throws An error if i18n has not yet been configured.\n * @returns {string}\n * @memberof module:Internationalization\n */\nexport function getLocale(locale) {\n  if (messages === null) {\n    throw new Error('getLocale called before configuring i18n. Call configure with messages first.');\n  }\n  // 1. Explicit application request\n  if (locale !== undefined) {\n    return findSupportedLocale(locale);\n  }\n  // 2. User setting in cookie\n  const cookieLangPref = cookies\n    .get(config.LANGUAGE_PREFERENCE_COOKIE_NAME);\n  if (cookieLangPref) {\n    return findSupportedLocale(cookieLangPref.toLowerCase());\n  }\n  // 3. Browser language (default)\n  // Note that some browers prefer upper case for the region part of the locale, while others don't.\n  // Thus the toLowerCase, for consistency.\n  // https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage/language\n  return findSupportedLocale(global.navigator.language.toLowerCase());\n}\n\n/**\n * Returns messages for the provided locale, or the user's preferred locale if no argument is\n * provided.\n *\n * @param {string} [locale=getLocale()]\n * @memberof module:Internationalization\n */\nexport function getMessages(locale = getLocale()) {\n  return messages[locale];\n}\n\n/**\n * Determines if the provided locale is a right-to-left language.\n *\n * @param {string} locale\n * @memberof module:Internationalization\n */\nexport function isRtl(locale) {\n  return rtlLocales.includes(locale);\n}\n\n/**\n * Handles applying the RTL stylesheet and \"dir=rtl\" attribute to the html tag if the current locale\n * is a RTL language.\n *\n * @memberof module:Internationalization\n */\nexport function handleRtl() {\n  if (isRtl(getLocale())) {\n    global.document.getElementsByTagName('html')[0].setAttribute('dir', 'rtl');\n  } else {\n    global.document.getElementsByTagName('html')[0].setAttribute('dir', 'ltr');\n  }\n}\n\nconst messagesShape = {\n  ar: PropTypes.objectOf(PropTypes.string), // Arabic\n  en: PropTypes.objectOf(PropTypes.string),\n  'es-419': PropTypes.objectOf(PropTypes.string), // Spanish, Latin American\n  fr: PropTypes.objectOf(PropTypes.string), // French\n  'zh-cn': PropTypes.objectOf(PropTypes.string), // Chinese, Simplified\n  ca: PropTypes.objectOf(PropTypes.string), // Catalan\n  he: PropTypes.objectOf(PropTypes.string), // Hebrew\n  id: PropTypes.objectOf(PropTypes.string), // Indonesian\n  'ko-kr': PropTypes.objectOf(PropTypes.string), // Korean (Korea)\n  pl: PropTypes.objectOf(PropTypes.string), // Polish\n  'pt-br': PropTypes.objectOf(PropTypes.string), // Portuguese (Brazil)\n  ru: PropTypes.objectOf(PropTypes.string), // Russian\n  th: PropTypes.objectOf(PropTypes.string), // Thai\n  uk: PropTypes.objectOf(PropTypes.string), // Ukrainian\n};\n\nconst optionsShape = {\n  config: PropTypes.object.isRequired,\n  loggingService: PropTypes.shape({\n    logError: PropTypes.func.isRequired,\n  }).isRequired,\n  messages: PropTypes.oneOfType([\n    PropTypes.shape(messagesShape),\n    PropTypes.arrayOf(PropTypes.shape(messagesShape)),\n  ]).isRequired,\n};\n\n/**\n *\n *\n * @param {Array} [messagesArray=[]]\n * @returns {Object}\n * @memberof module:Internationalization\n */\nexport function mergeMessages(messagesArray = []) {\n  return Array.isArray(messagesArray) ? merge({}, ...messagesArray) : {};\n}\n\n/**\n * Configures the i18n library with messages for your application.\n *\n * Logs a warning if it detects a locale it doesn't expect (as defined by the supportedLocales list\n * above), or if an expected locale is not provided.\n *\n * @param {Object} options\n * @param {LoggingService} options.loggingService\n * @param {Object} options.config\n * @param {Object} options.messages\n * @memberof module:Internationalization\n */\nexport function configure(options) {\n  PropTypes.checkPropTypes(optionsShape, options, 'property', 'i18n');\n  // eslint-disable-next-line prefer-destructuring\n  loggingService = options.loggingService;\n  // eslint-disable-next-line prefer-destructuring\n  config = options.config;\n  messages = Array.isArray(options.messages) ? mergeMessages(options.messages) : options.messages;\n\n  if (config.ENVIRONMENT !== 'production') {\n    Object.keys(messages).forEach((key) => {\n      if (supportedLocales.indexOf(key) < 0) {\n        console.warn(`Unexpected locale: ${key}`); // eslint-disable-line no-console\n      }\n    });\n\n    supportedLocales.forEach((key) => {\n      if (messages[key] === undefined) {\n        console.warn(`Missing locale: ${key}`); // eslint-disable-line no-console\n      }\n    });\n  }\n\n  handleRtl();\n}\n"],"file":"lib.js"}