{"version":3,"sources":["../../src/i18n/injectIntlWithShim.jsx"],"names":["React","injectIntl","intlShape","getLoggingService","injectIntlWithShim","WrappedComponent","ShimmedIntlComponent","props","shimmedIntl","Object","create","intl","formatMessage","value","definition","undefined","id","error","Error","process","env","NODE_ENV","console","logError","args","Component","propTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,YAAtC;AACA,SAASC,iBAAT,QAAkC,OAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,gBAAD,EAAsB;AAAA,MACzCC,oBADyC;AAAA;;AAAA;;AAE7C,kCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;AACA,YAAKC,WAAL,GAAmBC,MAAM,CAACC,MAAP,CAAc,MAAKH,KAAL,CAAWI,IAAzB,EAA+B;AAChDC,QAAAA,aAAa,EAAE;AACbC,UAAAA,KAAK,EAAE,eAACC,UAAD,EAAyB;AAAA;;AAC9B,gBAAIA,UAAU,KAAKC,SAAf,IAA4BD,UAAU,CAACE,EAAX,KAAkBD,SAAlD,EAA6D;AAC3D,kBAAME,KAAK,GAAG,IAAIC,KAAJ,CAAU,sEAAV,CAAd;;AACA,kBAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,gBAAAA,OAAO,CAACL,KAAR,CAAcA,KAAd,EADyC,CACnB;;AACtB,uBAAO,wDAAP;AACD;;AACDd,cAAAA,iBAAiB,GAAGoB,QAApB,CAA6BN,KAA7B;AACA,qBAAO,EAAP,CAP2D,CAOhD;AACZ;;AAT6B,8CAATO,IAAS;AAATA,cAAAA,IAAS;AAAA;;AAU9B,mBAAO,0BAAKjB,KAAL,CAAWI,IAAX,EAAgBC,aAAhB,0BAA8BE,UAA9B,SAA6CU,IAA7C,EAAP;AACD;AAZY;AADiC,OAA/B,CAAnB;AAFiB;AAkBlB;;AApB4C;AAAA;AAAA,aAsB7C,kBAAS;AACP,4BAAO,oBAAC,gBAAD,eAAsB,KAAKjB,KAA3B;AAAkC,UAAA,IAAI,EAAE,KAAKC;AAA7C,WAAP;AACD;AAxB4C;;AAAA;AAAA,IACZR,KAAK,CAACyB,SADM;;AA2B/CnB,EAAAA,oBAAoB,CAACoB,SAArB,GAAiC;AAC/Bf,IAAAA,IAAI,EAAET,SAAS,CAACyB;AADe,GAAjC;AAIA,SAAO1B,UAAU,CAACK,oBAAD,CAAjB;AACD,CAhCD;;AAkCA,eAAeF,kBAAf","sourcesContent":["import React from 'react';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { getLoggingService } from './lib';\n\n/**\n * This function wraps react-intl's injectIntl function in order to add error logging to the intl\n * property's formatMessage function.\n *\n * @memberof I18n\n */\nconst injectIntlWithShim = (WrappedComponent) => {\n  class ShimmedIntlComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.shimmedIntl = Object.create(this.props.intl, {\n        formatMessage: {\n          value: (definition, ...args) => {\n            if (definition === undefined || definition.id === undefined) {\n              const error = new Error('i18n error: An undefined message was supplied to intl.formatMessage.');\n              if (process.env.NODE_ENV !== 'production') {\n                console.error(error); // eslint-disable-line no-console\n                return '!!! Missing message supplied to intl.formatMessage !!!';\n              }\n              getLoggingService().logError(error);\n              return ''; // Fail silently in production\n            }\n            return this.props.intl.formatMessage(definition, ...args);\n          },\n        },\n      });\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} intl={this.shimmedIntl} />;\n    }\n  }\n\n  ShimmedIntlComponent.propTypes = {\n    intl: intlShape.isRequired,\n  };\n\n  return injectIntl(ShimmedIntlComponent);\n};\n\nexport default injectIntlWithShim;\n"],"file":"injectIntlWithShim.js"}