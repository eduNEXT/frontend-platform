{"version":3,"file":"injectIntlWithShim.js","names":["React","injectIntl","getLoggingService","intlShape","injectIntlWithShim","WrappedComponent","ShimmedIntlComponent","Component","constructor","props","_this","this","shimmedIntl","Object","create","intl","formatMessage","value","definition","undefined","id","error","Error","process","env","NODE_ENV","console","logError","_len","arguments","length","args","Array","_key","render","createElement","_extends","propTypes","isRequired"],"sources":["../../src/i18n/injectIntlWithShim.jsx"],"sourcesContent":["import React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { getLoggingService, intlShape } from './lib';\n\n/**\n * This function wraps react-intl's injectIntl function in order to add error logging to the intl\n * property's formatMessage function.\n *\n * @memberof I18n\n */\nconst injectIntlWithShim = (WrappedComponent) => {\n  class ShimmedIntlComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.shimmedIntl = Object.create(this.props.intl, {\n        formatMessage: {\n          value: (definition, ...args) => {\n            if (definition === undefined || definition.id === undefined) {\n              const error = new Error('i18n error: An undefined message was supplied to intl.formatMessage.');\n              if (process.env.NODE_ENV !== 'production') {\n                console.error(error); // eslint-disable-line no-console\n                return '!!! Missing message supplied to intl.formatMessage !!!';\n              }\n              getLoggingService().logError(error);\n              return ''; // Fail silently in production\n            }\n            return this.props.intl.formatMessage(definition, ...args);\n          },\n        },\n      });\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} intl={this.shimmedIntl} />;\n    }\n  }\n\n  ShimmedIntlComponent.propTypes = {\n    intl: intlShape.isRequired,\n  };\n\n  return injectIntl(ShimmedIntlComponent);\n};\n\nexport default injectIntlWithShim;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,iBAAiB,EAAEC,SAAS,QAAQ,OAAO;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,GAAIC,gBAAgB,IAAK;EAC/C,MAAMC,oBAAoB,SAASN,KAAK,CAACO,SAAS,CAAC;IACjDC,WAAWA,CAACC,KAAK,EAAE;MAAA,IAAAC,KAAA;MACjB,KAAK,CAACD,KAAK,CAAC;MAAAC,KAAA,GAAAC,IAAA;MACZ,IAAI,CAACC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACL,KAAK,CAACM,IAAI,EAAE;QAChDC,aAAa,EAAE;UACbC,KAAK,EAAE,SAAAA,CAACC,UAAU,EAAc;YAC9B,IAAIA,UAAU,KAAKC,SAAS,IAAID,UAAU,CAACE,EAAE,KAAKD,SAAS,EAAE;cAC3D,MAAME,KAAK,GAAG,IAAIC,KAAK,CAAC,sEAAsE,CAAC;cAC/F,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;gBACzCC,OAAO,CAACL,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;gBACtB,OAAO,wDAAwD;cACjE;cACAnB,iBAAiB,CAAC,CAAC,CAACyB,QAAQ,CAACN,KAAK,CAAC;cACnC,OAAO,EAAE,CAAC,CAAC;YACb;YAAC,SAAAO,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAToBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;cAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;YAAA;YAUzB,OAAOvB,KAAI,CAACD,KAAK,CAACM,IAAI,CAACC,aAAa,CAACE,UAAU,EAAE,GAAGa,IAAI,CAAC;UAC3D;QACF;MACF,CAAC,CAAC;IACJ;IAEAG,MAAMA,CAAA,EAAG;MACP,oBAAOlC,KAAA,CAAAmC,aAAA,CAAC9B,gBAAgB,EAAA+B,QAAA,KAAK,IAAI,CAAC3B,KAAK;QAAEM,IAAI,EAAE,IAAI,CAACH;MAAY,EAAE,CAAC;IACrE;EACF;EAEAN,oBAAoB,CAAC+B,SAAS,GAAG;IAC/BtB,IAAI,EAAEZ,SAAS,CAACmC;EAClB,CAAC;EAED,OAAOrC,UAAU,CAACK,oBAAoB,CAAC;AACzC,CAAC;AAED,eAAeF,kBAAkB","ignoreList":[]}