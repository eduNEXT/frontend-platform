{"version":3,"file":"transifex-utils.js","names":["fs","require","glob","path","gatherJson","dir","ret","files","sync","forEach","filename","messages","JSON","parse","readFileSync","push","escapeDots","messageId","replace","jsonDir","process","argv","messageObjects","length","exitCode","Error","loggingPrefix","basename","__filename","bashScriptsPath","hashFile","stdout","write","messageInfo","outputFile","writeFileSync","message","transifexFormatId","id","info","find","mi","key","appendFileSync","string_hash","description","output","defaultMessage","stringify"],"sources":["../../../src/i18n/scripts/transifex-utils.js"],"sourcesContent":["#!/usr/bin/env node\n\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\n/*\n * See the Makefile for how the required hash file is downloaded from Transifex.\n */\n\n/*\n * Expected input: a directory, possibly containing subdirectories, with .json files.  Each .json\n * file is an array of translation triplets (id, description, defaultMessage).\n *\n *\n */\nfunction gatherJson(dir) {\n  const ret = [];\n  const files = glob.sync(`${dir}/**/*.json`);\n\n  files.forEach((filename) => {\n    const messages = JSON.parse(fs.readFileSync(filename));\n    ret.push(...messages);\n  });\n  return ret;\n}\n\n// the hash file returns ids whose periods are \"escaped\" (sort of), like this:\n// \"key\": \"profile\\\\.sociallinks\\\\.social\\\\.links\"\n// so our regular messageIds won't match them out of the box\nfunction escapeDots(messageId) {\n  return messageId.replace(/\\./g, '\\\\.');\n}\n\nconst jsonDir = process.argv[2];\nconst messageObjects = gatherJson(jsonDir);\n\nif (messageObjects.length === 0) {\n  process.exitCode = 1;\n  throw new Error('Found no messages');\n}\n\nif (process.argv[3] === '--comments') { // prepare to handle the translator notes\n  const loggingPrefix = path.basename(`${__filename}`); // the name of this JS file\n  const bashScriptsPath = (\n    process.argv[4] && process.argv[4] === '--v3-scripts-path'\n      ? './node_modules/@edx/reactifex/bash_scripts'\n      : './node_modules/reactifex/bash_scripts');\n\n  const hashFile = `${bashScriptsPath}/hashmap.json`;\n  process.stdout.write(`${loggingPrefix}: reading hash file ${hashFile}\\n`);\n  const messageInfo = JSON.parse(fs.readFileSync(hashFile));\n\n  const outputFile = `${bashScriptsPath}/hashed_data.txt`;\n  process.stdout.write(`${loggingPrefix}: writing to output file ${outputFile}\\n`);\n  fs.writeFileSync(outputFile, '');\n\n  messageObjects.forEach((message) => {\n    const transifexFormatId = escapeDots(message.id);\n\n    const info = messageInfo.find(mi => mi.key === transifexFormatId);\n    if (info) {\n      fs.appendFileSync(outputFile, `${info.string_hash}|${message.description}\\n`);\n    } else {\n      process.stdout.write(`${loggingPrefix}: string ${message.id} does not yet exist on transifex!\\n`);\n    }\n  });\n} else {\n  const output = {};\n\n  messageObjects.forEach((message) => {\n    output[message.id] = message.defaultMessage;\n  });\n  fs.writeFileSync(process.argv[3], JSON.stringify(output, null, 2));\n}\n"],"mappings":"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","ignoreList":[]}