{"version":3,"file":"initialize.js","names":["createBrowserHistory","createMemoryHistory","publish","getConfig","mergeConfig","configure","configureLogging","getLoggingService","NewRelicLoggingService","logError","configureAnalytics","SegmentAnalyticsService","identifyAnonymousUser","identifyAuthenticatedUser","getAuthenticatedHttpClient","configureAuth","ensureAuthenticatedUser","fetchAuthenticatedUser","hydrateAuthenticatedUser","getAuthenticatedUser","AxiosJwtAuthService","configureI18n","APP_PUBSUB_INITIALIZED","APP_CONFIG_INITIALIZED","APP_AUTH_INITIALIZED","APP_I18N_INITIALIZED","APP_LOGGING_INITIALIZED","APP_ANALYTICS_INITIALIZED","APP_READY","APP_INIT_ERROR","configureCache","history","window","basename","PUBLIC_PATH","initError","error","auth","requireUser","hydrateUser","global","location","href","runtimeConfig","MFE_CONFIG_API_URL","APP_ID","apiConfig","headers","accept","apiService","params","URLSearchParams","append","url","toString","get","data","console","message","analytics","authenticatedUser","userId","applyOverrideHandlers","overrides","noOp","pubSub","config","logging","i18n","ready","initialize","loggingService","analyticsService","authService","authMiddleware","requireAuthenticatedUser","messages","handlers","overrideHandlers","middleware","httpClient","isRedirecting"],"sources":["../src/initialize.js"],"sourcesContent":["/**\n * #### Import members from **@edx/frontend-platform**\n *\n * The initialization module provides a function for managing an application's initialization\n * lifecycle.  It also provides constants and default handler implementations.\n *\n * ```\n * import {\n *   initialize,\n *   APP_INIT_ERROR,\n *   APP_READY,\n *   subscribe,\n * } from '@edx/frontend-platform';\n * import { AppProvider, ErrorPage, PageRoute } from '@edx/frontend-platform/react';\n * import React from 'react';\n * import ReactDOM from 'react-dom';\n * import { Switch } from 'react-router-dom';\n *\n * subscribe(APP_READY, () => {\n *   ReactDOM.render(\n *     <AppProvider store={configureStore()}>\n *       <Header />\n *       <main>\n *         <Switch>\n *           <PageRoute exact path=\"/\" component={PaymentPage} />\n *         </Switch>\n *       </main>\n *       <Footer />\n *     </AppProvider>,\n *     document.getElementById('root'),\n *   );\n * });\n *\n * subscribe(APP_INIT_ERROR, (error) => {\n *   ReactDOM.render(<ErrorPage message={error.message} />, document.getElementById('root'));\n * });\n *\n * initialize({\n *   messages: [appMessages],\n *   requireAuthenticatedUser: true,\n *   hydrateAuthenticatedUser: true,\n * });\n\n```\n * @module Initialization\n */\n\nimport { createBrowserHistory, createMemoryHistory } from 'history';\nimport {\n  publish,\n} from './pubSub';\n// eslint-disable-next-line import/no-cycle\nimport {\n  getConfig, mergeConfig,\n} from './config';\nimport {\n  configure as configureLogging, getLoggingService, NewRelicLoggingService, logError,\n} from './logging';\nimport {\n  configure as configureAnalytics, SegmentAnalyticsService, identifyAnonymousUser, identifyAuthenticatedUser,\n} from './analytics';\nimport {\n  getAuthenticatedHttpClient,\n  configure as configureAuth,\n  ensureAuthenticatedUser,\n  fetchAuthenticatedUser,\n  hydrateAuthenticatedUser,\n  getAuthenticatedUser,\n  AxiosJwtAuthService,\n} from './auth';\nimport { configure as configureI18n } from './i18n';\nimport {\n  APP_PUBSUB_INITIALIZED,\n  APP_CONFIG_INITIALIZED,\n  APP_AUTH_INITIALIZED,\n  APP_I18N_INITIALIZED,\n  APP_LOGGING_INITIALIZED,\n  APP_ANALYTICS_INITIALIZED,\n  APP_READY, APP_INIT_ERROR,\n} from './constants';\nimport configureCache from './auth/LocalForageCache';\n\n/**\n * A browser history or memory history object created by the [history](https://github.com/ReactTraining/history)\n * package.  Applications are encouraged to use this history object, rather than creating their own,\n * as behavior may be undefined when managing history via multiple mechanisms/instances. Note that\n * in environments where browser history may be inaccessible due to `window` being undefined, this\n * falls back to memory history.\n */\nexport const history = (typeof window !== 'undefined')\n  ? createBrowserHistory({\n    basename: getConfig().PUBLIC_PATH,\n  }) : createMemoryHistory();\n\n/**\n * The default handler for the initialization lifecycle's `initError` phase.  Logs the error to the\n * LoggingService using `logError`\n *\n * @see {@link module:frontend-platform/logging~logError}\n * @param {*} error\n */\nexport async function initError(error) {\n  logError(error);\n}\n\n/**\n * The default handler for the initialization lifecycle's `auth` phase.\n *\n * The handler has several responsibilities:\n * - Determining the user's authentication state (authenticated or anonymous)\n * - Optionally redirecting to login if the application requires an authenticated user.\n * - Optionally loading additional user information via the application's user account data\n * endpoint.\n *\n * @param {boolean} requireUser Whether or not we should redirect to login if a user is not\n * authenticated.\n * @param {boolean} hydrateUser Whether or not we should fetch additional user account data.\n */\nexport async function auth(requireUser, hydrateUser) {\n  if (requireUser) {\n    await ensureAuthenticatedUser(global.location.href);\n  } else {\n    await fetchAuthenticatedUser();\n  }\n\n  if (hydrateUser && getAuthenticatedUser() !== null) {\n    // We intentionally do not await the promise returned by hydrateAuthenticatedUser. All the\n    // critical data is returned as part of fetch/ensureAuthenticatedUser above, and anything else\n    // is a nice-to-have for application code.\n    hydrateAuthenticatedUser();\n  }\n}\n\n/*\n * Set or overrides configuration through an API.\n * This method allows runtime configuration.\n * Set a basic configuration when an error happen and allow initError and display the ErrorPage.\n */\nexport async function runtimeConfig() {\n  try {\n    const { MFE_CONFIG_API_URL, APP_ID } = getConfig();\n\n    if (MFE_CONFIG_API_URL) {\n      const apiConfig = { headers: { accept: 'application/json' } };\n      const apiService = await configureCache();\n\n      const params = new URLSearchParams();\n      params.append('mfe', APP_ID);\n      const url = `${MFE_CONFIG_API_URL}?${params.toString()}`;\n\n      const { data } = await apiService.get(url, apiConfig);\n      mergeConfig(data);\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Error with config API', error.message);\n  }\n}\n\n/**\n * The default handler for the initialization lifecycle's `analytics` phase.\n *\n * The handler is responsible for identifying authenticated and anonymous users with the analytics\n * service.  This is a pre-requisite for sending analytics events, thus, we do it during the\n * initialization sequence so that analytics is ready once the application's UI code starts to load.\n *\n */\nexport async function analytics() {\n  const authenticatedUser = getAuthenticatedUser();\n  if (authenticatedUser && authenticatedUser.userId) {\n    identifyAuthenticatedUser(authenticatedUser.userId);\n  } else {\n    await identifyAnonymousUser();\n  }\n}\n\nfunction applyOverrideHandlers(overrides) {\n  const noOp = async () => {};\n  return {\n    pubSub: noOp,\n    config: noOp,\n    logging: noOp,\n    auth,\n    analytics,\n    i18n: noOp,\n    ready: noOp,\n    initError,\n    ...overrides, // This will override any same-keyed handlers from above.\n  };\n}\n\n/**\n * Invokes the application initialization sequence.\n *\n * The sequence proceeds through a number of lifecycle phases, during which pertinent services are\n * configured.\n *\n * Using the `handlers` option, lifecycle phase handlers can be overridden to perform custom\n * functionality.  Note that while these override handlers _do_ replace the default handler\n * functionality for analytics, auth, and initError (the other phases have no default\n * functionality), they do _not_ override the configuration of the actual services that those\n * handlers leverage.\n *\n * Some services can be overridden via the loggingService and analyticsService options.  The other\n * services (auth and i18n) cannot currently be overridden.\n *\n * The following lifecycle phases exist:\n *\n * - pubSub: A no-op by default.\n * - config: A no-op by default.\n * - logging: A no-op by default.\n * - auth: Uses the 'auth' handler defined above.\n * - analytics: Uses the 'analytics' handler defined above.\n * - i18n: A no-op by default.\n * - ready: A no-op by default.\n * - initError: Uses the 'initError' handler defined above.\n *\n * @param {Object} [options]\n * @param {*} [options.loggingService=NewRelicLoggingService] The `LoggingService` implementation\n * to use.\n * @param {*} [options.analyticsService=SegmentAnalyticsService] The `AnalyticsService`\n * implementation to use.\n * @param {*} [options.authMiddleware=[]] An array of middleware to apply to http clients in the auth service.\n * @param {*} [options.requireAuthenticatedUser=false] If true, turns on automatic login\n * redirection for unauthenticated users.  Defaults to false, meaning that by default the\n * application will allow anonymous/unauthenticated sessions.\n * @param {*} [options.hydrateAuthenticatedUser=false] If true, makes an API call to the user\n * account endpoint (`${App.config.LMS_BASE_URL}/api/user/v1/accounts/${username}`) to fetch\n * detailed account information for the authenticated user. This data is merged into the return\n * value of `getAuthenticatedUser`, overriding any duplicate keys that already exist. Defaults to\n * false, meaning that no additional account information will be loaded.\n * @param {*} [options.messages] A i18n-compatible messages object, or an array of such objects. If\n * an array is provided, duplicate keys are resolved with the last-one-in winning.\n * @param {*} [options.handlers={}] An optional object of handlers which can be used to replace the\n * default behavior of any part of the startup sequence. It can also be used to add additional\n * initialization behavior before or after the rest of the sequence.\n */\nexport async function initialize({\n  loggingService = NewRelicLoggingService,\n  analyticsService = SegmentAnalyticsService,\n  authService = AxiosJwtAuthService,\n  authMiddleware = [],\n  requireAuthenticatedUser: requireUser = false,\n  hydrateAuthenticatedUser: hydrateUser = false,\n  messages,\n  handlers: overrideHandlers = {},\n}) {\n  const handlers = applyOverrideHandlers(overrideHandlers);\n  try {\n    // Pub/Sub\n    await handlers.pubSub();\n    publish(APP_PUBSUB_INITIALIZED);\n\n    // Configuration\n    await handlers.config();\n    await runtimeConfig();\n    publish(APP_CONFIG_INITIALIZED);\n\n    // Logging\n    configureLogging(loggingService, {\n      config: getConfig(),\n    });\n    await handlers.logging();\n    publish(APP_LOGGING_INITIALIZED);\n\n    // Authentication\n    configureAuth(authService, {\n      loggingService: getLoggingService(),\n      config: getConfig(),\n      middleware: authMiddleware,\n    });\n    await handlers.auth(requireUser, hydrateUser);\n    publish(APP_AUTH_INITIALIZED);\n\n    // Analytics\n    configureAnalytics(analyticsService, {\n      config: getConfig(),\n      loggingService: getLoggingService(),\n      httpClient: getAuthenticatedHttpClient(),\n    });\n    await handlers.analytics();\n    publish(APP_ANALYTICS_INITIALIZED);\n\n    // Internationalization\n    configureI18n({\n      messages,\n      config: getConfig(),\n      loggingService: getLoggingService(),\n    });\n    await handlers.i18n();\n    publish(APP_I18N_INITIALIZED);\n\n    // Application Ready\n    await handlers.ready();\n    publish(APP_READY);\n  } catch (error) {\n    if (!error.isRedirecting) {\n      // Initialization Error\n      await handlers.initError(error);\n      publish(APP_INIT_ERROR, error);\n    }\n  }\n}\n"],"mappings":"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"}