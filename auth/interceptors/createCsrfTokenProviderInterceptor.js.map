{"version":3,"file":"createCsrfTokenProviderInterceptor.js","names":["createCsrfTokenProviderInterceptor","options","csrfTokenService","CSRF_TOKEN_API_PATH","shouldSkip","interceptor","axiosRequestConfig","url","csrfToken","getCsrfToken","error","requestError","Object","create","message","config","Promise","reject","CSRF_HEADER_NAME","headers"],"sources":["../../../src/auth/interceptors/createCsrfTokenProviderInterceptor.js"],"sourcesContent":["const createCsrfTokenProviderInterceptor = (options) => {\n  const { csrfTokenService, CSRF_TOKEN_API_PATH, shouldSkip } = options;\n\n  // Creating the interceptor inside this closure to\n  // maintain reference to the options supplied.\n  const interceptor = async (axiosRequestConfig) => {\n    if (shouldSkip(axiosRequestConfig)) {\n      return axiosRequestConfig;\n    }\n    const { url } = axiosRequestConfig;\n    let csrfToken;\n\n    // Important: the job of this interceptor is to get a csrf token and update\n    // the original request configuration. Errors thrown getting the csrf token\n    // should contain the original request config. This allows other interceptors\n    // (namely our retry request interceptor below) to access the original request\n    // and handle it appropriately\n    try {\n      csrfToken = await csrfTokenService.getCsrfToken(url, CSRF_TOKEN_API_PATH);\n    } catch (error) {\n      const requestError = Object.create(error);\n      requestError.message = `[getCsrfToken] ${requestError.message}`;\n      // Important: return the original axios request config\n      requestError.config = axiosRequestConfig;\n      return Promise.reject(requestError);\n    }\n\n    const CSRF_HEADER_NAME = 'X-CSRFToken';\n    // eslint-disable-next-line no-param-reassign\n    axiosRequestConfig.headers[CSRF_HEADER_NAME] = csrfToken;\n    return axiosRequestConfig;\n  };\n\n  return interceptor;\n};\n\nexport default createCsrfTokenProviderInterceptor;\n"],"mappings":"AAAA,MAAMA,kCAAkC,GAAIC,OAAO,IAAK;EACtD,MAAM;IAAEC,gBAAgB;IAAEC,mBAAmB;IAAEC;EAAW,CAAC,GAAGH,OAAO;;EAErE;EACA;EACA,MAAMI,WAAW,GAAG,MAAOC,kBAAkB,IAAK;IAChD,IAAIF,UAAU,CAACE,kBAAkB,CAAC,EAAE;MAClC,OAAOA,kBAAkB;IAC3B;IACA,MAAM;MAAEC;IAAI,CAAC,GAAGD,kBAAkB;IAClC,IAAIE,SAAS;;IAEb;IACA;IACA;IACA;IACA;IACA,IAAI;MACFA,SAAS,GAAG,MAAMN,gBAAgB,CAACO,YAAY,CAACF,GAAG,EAAEJ,mBAAmB,CAAC;IAC3E,CAAC,CAAC,OAAOO,KAAK,EAAE;MACd,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACH,KAAK,CAAC;MACzCC,YAAY,CAACG,OAAO,GAAI,kBAAiBH,YAAY,CAACG,OAAQ,EAAC;MAC/D;MACAH,YAAY,CAACI,MAAM,GAAGT,kBAAkB;MACxC,OAAOU,OAAO,CAACC,MAAM,CAACN,YAAY,CAAC;IACrC;IAEA,MAAMO,gBAAgB,GAAG,aAAa;IACtC;IACAZ,kBAAkB,CAACa,OAAO,CAACD,gBAAgB,CAAC,GAAGV,SAAS;IACxD,OAAOF,kBAAkB;EAC3B,CAAC;EAED,OAAOD,WAAW;AACpB,CAAC;AAED,eAAeL,kCAAkC","ignoreList":[]}