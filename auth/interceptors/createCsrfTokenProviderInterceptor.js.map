{"version":3,"file":"createCsrfTokenProviderInterceptor.js","names":["createCsrfTokenProviderInterceptor","options","csrfTokenService","CSRF_TOKEN_API_PATH","shouldSkip","interceptor","axiosRequestConfig","url","getCsrfToken","csrfToken","requestError","Object","create","message","config","Promise","reject","CSRF_HEADER_NAME","headers"],"sources":["../../../src/auth/interceptors/createCsrfTokenProviderInterceptor.js"],"sourcesContent":["const createCsrfTokenProviderInterceptor = (options) => {\n  const { csrfTokenService, CSRF_TOKEN_API_PATH, shouldSkip } = options;\n\n  // Creating the interceptor inside this closure to\n  // maintain reference to the options supplied.\n  const interceptor = async (axiosRequestConfig) => {\n    if (shouldSkip(axiosRequestConfig)) {\n      return axiosRequestConfig;\n    }\n    const { url } = axiosRequestConfig;\n    let csrfToken;\n\n    // Important: the job of this interceptor is to get a csrf token and update\n    // the original request configuration. Errors thrown getting the csrf token\n    // should contain the original request config. This allows other interceptors\n    // (namely our retry request interceptor below) to access the original request\n    // and handle it appropriately\n    try {\n      csrfToken = await csrfTokenService.getCsrfToken(url, CSRF_TOKEN_API_PATH);\n    } catch (error) {\n      const requestError = Object.create(error);\n      requestError.message = `[getCsrfToken] ${requestError.message}`;\n      // Important: return the original axios request config\n      requestError.config = axiosRequestConfig;\n      return Promise.reject(requestError);\n    }\n\n    const CSRF_HEADER_NAME = 'X-CSRFToken';\n    // eslint-disable-next-line no-param-reassign\n    axiosRequestConfig.headers[CSRF_HEADER_NAME] = csrfToken;\n    return axiosRequestConfig;\n  };\n\n  return interceptor;\n};\n\nexport default createCsrfTokenProviderInterceptor;\n"],"mappings":";+CACA;AAAA;AAAA;AADA,IAAMA,kCAAkC,GAAG,SAArCA,kCAAkC,CAAIC,OAAO,EAAK;EACtD,IAAQC,gBAAgB,GAAsCD,OAAO,CAA7DC,gBAAgB;IAAEC,mBAAmB,GAAiBF,OAAO,CAA3CE,mBAAmB;IAAEC,UAAU,GAAKH,OAAO,CAAtBG,UAAU;;EAEzD;EACA;EACA,IAAMC,WAAW;IAAA,sEAAG,iBAAOC,kBAAkB;MAAA;MAAA;QAAA;UAAA;YAAA,KACvCF,UAAU,CAACE,kBAAkB,CAAC;cAAA;cAAA;YAAA;YAAA,iCACzBA,kBAAkB;UAAA;YAEnBC,GAAG,GAAKD,kBAAkB,CAA1BC,GAAG;YAAA;YAAA;YAAA,OASSL,gBAAgB,CAACM,YAAY,CAACD,GAAG,EAAEJ,mBAAmB,CAAC;UAAA;YAAzEM,SAAS;YAAA;YAAA;UAAA;YAAA;YAAA;YAEHC,YAAY,GAAGC,MAAM,CAACC,MAAM,aAAO;YACzCF,YAAY,CAACG,OAAO,4BAAqBH,YAAY,CAACG,OAAO,CAAE;YAC/D;YACAH,YAAY,CAACI,MAAM,GAAGR,kBAAkB;YAAC,iCAClCS,OAAO,CAACC,MAAM,CAACN,YAAY,CAAC;UAAA;YAG/BO,gBAAgB,GAAG,aAAa,EACtC;YACAX,kBAAkB,CAACY,OAAO,CAACD,gBAAgB,CAAC,GAAGR,SAAS;YAAC,iCAClDH,kBAAkB;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CAC1B;IAAA,gBA1BKD,WAAW;MAAA;IAAA;EAAA,GA0BhB;EAED,OAAOA,WAAW;AACpB,CAAC;AAED,eAAeL,kCAAkC"}