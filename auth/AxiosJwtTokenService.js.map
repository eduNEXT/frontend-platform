{"version":3,"file":"AxiosJwtTokenService.js","names":["Cookies","jwtDecode","axios","logFrontendAuthError","processAxiosErrorAndThrow","createRetryInterceptor","AxiosJwtTokenService","isTokenExpired","token","exp","Date","now","constructor","loggingService","tokenCookieName","tokenRefreshEndpoint","httpClient","create","defaults","withCredentials","interceptors","response","use","cookies","refreshRequestPromises","getHttpClient","decodeJwtCookie","cookieValue","get","e","error","Object","message","customAttributes","refresh","responseServerEpochSeconds","undefined","makeRefreshRequest","axiosResponse","post","data","response_epoch_seconds","userIsUnauthenticated","status","remove","decodedJwtToken","browserEpochSeconds","browserDriftSeconds","Math","abs","Error","finally","getJwtToken","forceRefresh","arguments","length"],"sources":["../../src/auth/AxiosJwtTokenService.js"],"sourcesContent":["import Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport { logFrontendAuthError, processAxiosErrorAndThrow } from './utils';\nimport createRetryInterceptor from './interceptors/createRetryInterceptor';\n\nexport default class AxiosJwtTokenService {\n  static isTokenExpired(token) {\n    return !token || token.exp < Date.now() / 1000;\n  }\n\n  constructor(loggingService, tokenCookieName, tokenRefreshEndpoint) {\n    this.loggingService = loggingService;\n    this.tokenCookieName = tokenCookieName;\n    this.tokenRefreshEndpoint = tokenRefreshEndpoint;\n\n    this.httpClient = axios.create();\n    // Set withCredentials to true. Enables cross-site Access-Control requests\n    // to be made using cookies, authorization headers or TLS client\n    // certificates. More on MDN:\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n    this.httpClient.defaults.withCredentials = true;\n    // Add retries to this axios instance\n    this.httpClient.interceptors.response.use(\n      response => response,\n      createRetryInterceptor({ httpClient: this.httpClient }),\n    );\n\n    this.cookies = new Cookies();\n    this.refreshRequestPromises = {};\n  }\n\n  getHttpClient() {\n    return this.httpClient;\n  }\n\n  decodeJwtCookie() {\n    const cookieValue = this.cookies.get(this.tokenCookieName);\n\n    if (cookieValue) {\n      try {\n        return jwtDecode(cookieValue);\n      } catch (e) {\n        const error = Object.create(e);\n        error.message = 'Error decoding JWT token';\n        error.customAttributes = { cookieValue };\n        throw error;\n      }\n    }\n\n    return null;\n  }\n\n  refresh() {\n    let responseServerEpochSeconds = 0;\n\n    if (this.refreshRequestPromises[this.tokenCookieName] === undefined) {\n      const makeRefreshRequest = async () => {\n        let axiosResponse;\n        try {\n          try {\n            axiosResponse = await this.httpClient.post(this.tokenRefreshEndpoint);\n            // eslint-disable-next-line max-len\n            if (axiosResponse.data && axiosResponse.data.response_epoch_seconds) {\n              responseServerEpochSeconds = axiosResponse.data.response_epoch_seconds;\n            }\n          } catch (error) {\n            processAxiosErrorAndThrow(error);\n          }\n        } catch (error) {\n          const userIsUnauthenticated = error.response && error.response.status === 401;\n          if (userIsUnauthenticated) {\n            // Clean up the cookie if it exists to eliminate any situation\n            // where the cookie is not expired but the jwt is expired.\n            this.cookies.remove(this.tokenCookieName);\n            const decodedJwtToken = null;\n            return decodedJwtToken;\n          }\n\n          // TODO: Network timeouts and other problems will end up in\n          // this block of code. We could add logic for retrying token\n          // refreshes if we wanted to.\n          throw error;\n        }\n\n        const browserEpochSeconds = Date.now() / 1000;\n        const browserDriftSeconds = responseServerEpochSeconds > 0\n          ? Math.abs(browserEpochSeconds - responseServerEpochSeconds)\n          : null;\n\n        const decodedJwtToken = this.decodeJwtCookie();\n\n        if (!decodedJwtToken) {\n          // This is an unexpected case. The refresh endpoint should set the\n          //   cookie that is needed.\n          // For more details, see:\n          //   docs/decisions/0005-token-null-after-successful-refresh.rst\n          const error = new Error('Access token is still null after successful refresh.');\n          error.customAttributes = { axiosResponse, browserDriftSeconds, browserEpochSeconds };\n          throw error;\n        }\n\n        return decodedJwtToken;\n      };\n\n      this.refreshRequestPromises[this.tokenCookieName] = makeRefreshRequest().finally(() => {\n        delete this.refreshRequestPromises[this.tokenCookieName];\n      });\n    }\n\n    return this.refreshRequestPromises[this.tokenCookieName];\n  }\n\n  async getJwtToken(forceRefresh = false) {\n    try {\n      const decodedJwtToken = this.decodeJwtCookie(this.tokenCookieName);\n      if (!AxiosJwtTokenService.isTokenExpired(decodedJwtToken) && !forceRefresh) {\n        return decodedJwtToken;\n      }\n    } catch (e) {\n      // Log unexpected error and continue with attempt to refresh it.\n      // TODO: Fix these.  They're still using loggingService as a singleton.\n      logFrontendAuthError(this.loggingService, e);\n    }\n\n    try {\n      return await this.refresh();\n    } catch (e) {\n      // TODO: Fix these.  They're still using loggingService as a singleton.\n      logFrontendAuthError(this.loggingService, e);\n      throw e;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}