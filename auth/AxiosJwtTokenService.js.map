{"version":3,"file":"AxiosJwtTokenService.js","names":["Cookies","jwtDecode","axios","logFrontendAuthError","processAxiosErrorAndThrow","createRetryInterceptor","AxiosJwtTokenService","loggingService","tokenCookieName","tokenRefreshEndpoint","httpClient","create","defaults","withCredentials","interceptors","response","use","cookies","refreshRequestPromises","cookieValue","get","e","error","Object","message","customAttributes","responseServerEpochSeconds","undefined","makeRefreshRequest","post","axiosResponse","data","response_epoch_seconds","userIsUnauthenticated","status","remove","decodedJwtToken","browserEpochSeconds","Date","now","browserDriftSeconds","Math","abs","decodeJwtCookie","Error","forceRefresh","isTokenExpired","refresh","token","exp"],"sources":["../../src/auth/AxiosJwtTokenService.js"],"sourcesContent":["import Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport { logFrontendAuthError, processAxiosErrorAndThrow } from './utils';\nimport createRetryInterceptor from './interceptors/createRetryInterceptor';\n\nexport default class AxiosJwtTokenService {\n  static isTokenExpired(token) {\n    return !token || token.exp < Date.now() / 1000;\n  }\n\n  constructor(loggingService, tokenCookieName, tokenRefreshEndpoint) {\n    this.loggingService = loggingService;\n    this.tokenCookieName = tokenCookieName;\n    this.tokenRefreshEndpoint = tokenRefreshEndpoint;\n\n    this.httpClient = axios.create();\n    // Set withCredentials to true. Enables cross-site Access-Control requests\n    // to be made using cookies, authorization headers or TLS client\n    // certificates. More on MDN:\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n    this.httpClient.defaults.withCredentials = true;\n    // Add retries to this axios instance\n    this.httpClient.interceptors.response.use(\n      response => response,\n      createRetryInterceptor({ httpClient: this.httpClient }),\n    );\n\n    this.cookies = new Cookies();\n    this.refreshRequestPromises = {};\n  }\n\n  getHttpClient() {\n    return this.httpClient;\n  }\n\n  decodeJwtCookie() {\n    const cookieValue = this.cookies.get(this.tokenCookieName);\n\n    if (cookieValue) {\n      try {\n        return jwtDecode(cookieValue);\n      } catch (e) {\n        const error = Object.create(e);\n        error.message = 'Error decoding JWT token';\n        error.customAttributes = { cookieValue };\n        throw error;\n      }\n    }\n\n    return null;\n  }\n\n  refresh() {\n    let responseServerEpochSeconds = 0;\n\n    if (this.refreshRequestPromises[this.tokenCookieName] === undefined) {\n      const makeRefreshRequest = async () => {\n        let axiosResponse;\n        try {\n          try {\n            axiosResponse = await this.httpClient.post(this.tokenRefreshEndpoint);\n            // eslint-disable-next-line max-len\n            if (axiosResponse.data && axiosResponse.data.response_epoch_seconds) {\n              responseServerEpochSeconds = axiosResponse.data.response_epoch_seconds;\n            }\n          } catch (error) {\n            processAxiosErrorAndThrow(error);\n          }\n        } catch (error) {\n          const userIsUnauthenticated = error.response && error.response.status === 401;\n          if (userIsUnauthenticated) {\n            // Clean up the cookie if it exists to eliminate any situation\n            // where the cookie is not expired but the jwt is expired.\n            this.cookies.remove(this.tokenCookieName);\n            const decodedJwtToken = null;\n            return decodedJwtToken;\n          }\n\n          // TODO: Network timeouts and other problems will end up in\n          // this block of code. We could add logic for retrying token\n          // refreshes if we wanted to.\n          throw error;\n        }\n\n        const browserEpochSeconds = Date.now() / 1000;\n        const browserDriftSeconds = responseServerEpochSeconds > 0\n          ? Math.abs(browserEpochSeconds - responseServerEpochSeconds)\n          : null;\n\n        const decodedJwtToken = this.decodeJwtCookie();\n\n        if (!decodedJwtToken) {\n          // This is an unexpected case. The refresh endpoint should set the\n          //   cookie that is needed.\n          // For more details, see:\n          //   docs/decisions/0005-token-null-after-successful-refresh.rst\n          const error = new Error('Access token is still null after successful refresh.');\n          error.customAttributes = { axiosResponse, browserDriftSeconds, browserEpochSeconds };\n          throw error;\n        }\n\n        return decodedJwtToken;\n      };\n\n      this.refreshRequestPromises[this.tokenCookieName] = makeRefreshRequest().finally(() => {\n        delete this.refreshRequestPromises[this.tokenCookieName];\n      });\n    }\n\n    return this.refreshRequestPromises[this.tokenCookieName];\n  }\n\n  async getJwtToken(forceRefresh = false) {\n    try {\n      const decodedJwtToken = this.decodeJwtCookie(this.tokenCookieName);\n      if (!AxiosJwtTokenService.isTokenExpired(decodedJwtToken) && !forceRefresh) {\n        return decodedJwtToken;\n      }\n    } catch (e) {\n      // Log unexpected error and continue with attempt to refresh it.\n      // TODO: Fix these.  They're still using loggingService as a singleton.\n      logFrontendAuthError(this.loggingService, e);\n    }\n\n    try {\n      return await this.refresh();\n    } catch (e) {\n      // TODO: Fix these.  They're still using loggingService as a singleton.\n      logFrontendAuthError(this.loggingService, e);\n      throw e;\n    }\n  }\n}\n"],"mappings":";+CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,OAAOA,OAAO,MAAM,kBAAkB;AACtC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,yBAAyB,QAAQ,SAAS;AACzE,OAAOC,sBAAsB,MAAM,uCAAuC;AAAC,IAEtDC,oBAAoB;EAKvC,8BAAYC,cAAc,EAAEC,eAAe,EAAEC,oBAAoB,EAAE;IAAA;IACjE,IAAI,CAACF,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;IAEhD,IAAI,CAACC,UAAU,GAAGR,KAAK,CAACS,MAAM,EAAE;IAChC;IACA;IACA;IACA;IACA,IAAI,CAACD,UAAU,CAACE,QAAQ,CAACC,eAAe,GAAG,IAAI;IAC/C;IACA,IAAI,CAACH,UAAU,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CACvC,UAAAD,QAAQ;MAAA,OAAIA,QAAQ;IAAA,GACpBV,sBAAsB,CAAC;MAAEK,UAAU,EAAE,IAAI,CAACA;IAAW,CAAC,CAAC,CACxD;IAED,IAAI,CAACO,OAAO,GAAG,IAAIjB,OAAO,EAAE;IAC5B,IAAI,CAACkB,sBAAsB,GAAG,CAAC,CAAC;EAClC;EAAC;IAAA;IAAA,OAED,yBAAgB;MACd,OAAO,IAAI,CAACR,UAAU;IACxB;EAAC;IAAA;IAAA,OAED,2BAAkB;MAChB,IAAMS,WAAW,GAAG,IAAI,CAACF,OAAO,CAACG,GAAG,CAAC,IAAI,CAACZ,eAAe,CAAC;MAE1D,IAAIW,WAAW,EAAE;QACf,IAAI;UACF,OAAOlB,SAAS,CAACkB,WAAW,CAAC;QAC/B,CAAC,CAAC,OAAOE,CAAC,EAAE;UACV,IAAMC,KAAK,GAAGC,MAAM,CAACZ,MAAM,CAACU,CAAC,CAAC;UAC9BC,KAAK,CAACE,OAAO,GAAG,0BAA0B;UAC1CF,KAAK,CAACG,gBAAgB,GAAG;YAAEN,WAAW,EAAXA;UAAY,CAAC;UACxC,MAAMG,KAAK;QACb;MACF;MAEA,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OAED,mBAAU;MAAA;MACR,IAAII,0BAA0B,GAAG,CAAC;MAElC,IAAI,IAAI,CAACR,sBAAsB,CAAC,IAAI,CAACV,eAAe,CAAC,KAAKmB,SAAS,EAAE;QACnE,IAAMC,kBAAkB;UAAA,sEAAG;YAAA;YAAA;cAAA;gBAAA;kBAAA;kBAAA;kBAAA;kBAAA,OAIC,KAAI,CAAClB,UAAU,CAACmB,IAAI,CAAC,KAAI,CAACpB,oBAAoB,CAAC;gBAAA;kBAArEqB,aAAa;kBACb;kBACA,IAAIA,aAAa,CAACC,IAAI,IAAID,aAAa,CAACC,IAAI,CAACC,sBAAsB,EAAE;oBACnEN,0BAA0B,GAAGI,aAAa,CAACC,IAAI,CAACC,sBAAsB;kBACxE;kBAAC;kBAAA;gBAAA;kBAAA;kBAAA;kBAED5B,yBAAyB,aAAO;gBAAC;kBAAA;kBAAA;gBAAA;kBAAA;kBAAA;kBAG7B6B,qBAAqB,GAAG,YAAMlB,QAAQ,IAAI,YAAMA,QAAQ,CAACmB,MAAM,KAAK,GAAG;kBAAA,KACzED,qBAAqB;oBAAA;oBAAA;kBAAA;kBACvB;kBACA;kBACA,KAAI,CAAChB,OAAO,CAACkB,MAAM,CAAC,KAAI,CAAC3B,eAAe,CAAC;kBACnC4B,gBAAe,GAAG,IAAI;kBAAA,iCACrBA,gBAAe;gBAAA;kBAAA;gBAAA;kBASpBC,mBAAmB,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI;kBACvCC,mBAAmB,GAAGd,0BAA0B,GAAG,CAAC,GACtDe,IAAI,CAACC,GAAG,CAACL,mBAAmB,GAAGX,0BAA0B,CAAC,GAC1D,IAAI;kBAEFU,eAAe,GAAG,KAAI,CAACO,eAAe,EAAE;kBAAA,IAEzCP,eAAe;oBAAA;oBAAA;kBAAA;kBAClB;kBACA;kBACA;kBACA;kBACMd,KAAK,GAAG,IAAIsB,KAAK,CAAC,sDAAsD,CAAC;kBAC/EtB,KAAK,CAACG,gBAAgB,GAAG;oBAAEK,aAAa,EAAbA,aAAa;oBAAEU,mBAAmB,EAAnBA,mBAAmB;oBAAEH,mBAAmB,EAAnBA;kBAAoB,CAAC;kBAAC,MAC/Ef,KAAK;gBAAA;kBAAA,iCAGNc,eAAe;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA,CACvB;UAAA,gBA9CKR,kBAAkB;YAAA;UAAA;QAAA,GA8CvB;QAED,IAAI,CAACV,sBAAsB,CAAC,IAAI,CAACV,eAAe,CAAC,GAAGoB,kBAAkB,EAAE,WAAQ,CAAC,YAAM;UACrF,OAAO,KAAI,CAACV,sBAAsB,CAAC,KAAI,CAACV,eAAe,CAAC;QAC1D,CAAC,CAAC;MACJ;MAEA,OAAO,IAAI,CAACU,sBAAsB,CAAC,IAAI,CAACV,eAAe,CAAC;IAC1D;EAAC;IAAA;IAAA;MAAA,8EAED;QAAA;UAAA;UAAA;QAAA;UAAA;YAAA;cAAkBqC,YAAY,8DAAG,KAAK;cAAA;cAE5BT,eAAe,GAAG,IAAI,CAACO,eAAe,CAAC,IAAI,CAACnC,eAAe,CAAC;cAAA,MAC9D,CAACF,oBAAoB,CAACwC,cAAc,CAACV,eAAe,CAAC,IAAI,CAACS,YAAY;gBAAA;gBAAA;cAAA;cAAA,kCACjET,eAAe;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAGxB;cACA;cACAjC,oBAAoB,CAAC,IAAI,CAACI,cAAc,eAAI;YAAC;cAAA;cAAA;cAAA,OAIhC,IAAI,CAACwC,OAAO,EAAE;YAAA;cAAA;YAAA;cAAA;cAAA;cAE3B;cACA5C,oBAAoB,CAAC,IAAI,CAACI,cAAc,eAAI;cAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAGhD;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OA7HD,wBAAsByC,KAAK,EAAE;MAC3B,OAAO,CAACA,KAAK,IAAIA,KAAK,CAACC,GAAG,GAAGX,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI;IAChD;EAAC;EAAA;AAAA;AAAA,SAHkBjC,oBAAoB"}