{"version":3,"file":"utils.js","names":["urlRegex","getUrlParts","url","found","match","fullUrl","protocol","domain","path","endFilename","endFileExtension","query","hash","e","Error","logFrontendAuthError","loggingService","error","prefixedMessageError","Object","create","message","logError","customAttributes","processAxiosError","axiosErrorObject","request","response","config","_objectSpread","httpErrorType","httpErrorRequestUrl","method","httpErrorRequestMethod","status","data","stringifiedData","JSON","stringify","responseIsHTML","includes","httpErrorResponseData","httpErrorStatus","httpErrorMessage","processAxiosErrorAndThrow"],"sources":["../../src/auth/utils.js"],"sourcesContent":["// Lifted from here: https://regexr.com/3ok5o\nconst urlRegex = /([a-z]{1,2}tps?):\\/\\/((?:(?!(?:\\/|#|\\?|&)).)+)(?:(\\/(?:(?:(?:(?!(?:#|\\?|&)).)+\\/))?))?(?:((?:(?!(?:\\.|$|\\?|#)).)+))?(?:(\\.(?:(?!(?:\\?|$|#)).)+))?(?:(\\?(?:(?!(?:$|#)).)+))?(?:(#.+))?/;\nconst getUrlParts = (url) => {\n  const found = url.match(urlRegex);\n  try {\n    const [\n      fullUrl,\n      protocol,\n      domain,\n      path,\n      endFilename,\n      endFileExtension,\n      query,\n      hash,\n    ] = found;\n\n    return {\n      fullUrl,\n      protocol,\n      domain,\n      path,\n      endFilename,\n      endFileExtension,\n      query,\n      hash,\n    };\n  } catch (e) {\n    throw new Error(`Could not find url parts from ${url}.`);\n  }\n};\n\nconst logFrontendAuthError = (loggingService, error) => {\n  const prefixedMessageError = Object.create(error);\n  prefixedMessageError.message = `[frontend-auth] ${error.message}`;\n  loggingService.logError(prefixedMessageError, prefixedMessageError.customAttributes);\n};\n\nconst processAxiosError = (axiosErrorObject) => {\n  const error = Object.create(axiosErrorObject);\n  const { request, response, config } = error;\n\n  if (!config) {\n    error.customAttributes = {\n      ...error.customAttributes,\n      httpErrorType: 'unknown-api-request-error',\n    };\n    return error;\n  }\n\n  const {\n    url: httpErrorRequestUrl,\n    method: httpErrorRequestMethod,\n  } = config;\n  /* istanbul ignore else: difficult to enter the request-only error case in a unit test */\n  if (response) {\n    const { status, data } = response;\n    const stringifiedData = JSON.stringify(data) || '(empty response)';\n    const responseIsHTML = stringifiedData.includes('<!DOCTYPE html>');\n    // Don't include data if it is just an HTML document, like a 500 error page.\n    /* istanbul ignore next */\n    const httpErrorResponseData = responseIsHTML ? '<Response is HTML>' : stringifiedData;\n    error.customAttributes = {\n      ...error.customAttributes,\n      httpErrorType: 'api-response-error',\n      httpErrorStatus: status,\n      httpErrorResponseData,\n      httpErrorRequestUrl,\n      httpErrorRequestMethod,\n    };\n    error.message = `Axios Error (Response): ${status} - See custom attributes for details.`;\n  } else if (request) {\n    error.customAttributes = {\n      ...error.customAttributes,\n      httpErrorType: 'api-request-error',\n      httpErrorMessage: error.message,\n      httpErrorRequestUrl,\n      httpErrorRequestMethod,\n    };\n    // This case occurs most likely because of intermittent internet connection issues\n    // but it also, though less often, catches CORS or server configuration problems.\n    error.message = 'Axios Error (Request): (Possible local connectivity issue.) See custom attributes for details.';\n  } else {\n    error.customAttributes = {\n      ...error.customAttributes,\n      httpErrorType: 'api-request-config-error',\n      httpErrorMessage: error.message,\n      httpErrorRequestUrl,\n      httpErrorRequestMethod,\n    };\n    error.message = 'Axios Error (Config): See custom attributes for details.';\n  }\n\n  return error;\n};\n\nconst processAxiosErrorAndThrow = (axiosErrorObject) => {\n  throw processAxiosError(axiosErrorObject);\n};\n\nexport {\n  getUrlParts,\n  logFrontendAuthError,\n  processAxiosError,\n  processAxiosErrorAndThrow,\n};\n"],"mappings":"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","ignoreList":[]}