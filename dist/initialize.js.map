{"version":3,"file":"initialize.js","names":["createBrowserHistory","createMemoryHistory","envConfig","getPath","publish","getConfig","mergeConfig","configure","configureLogging","getLoggingService","NewRelicLoggingService","logError","configureAnalytics","SegmentAnalyticsService","identifyAnonymousUser","identifyAuthenticatedUser","GoogleAnalyticsLoader","getAuthenticatedHttpClient","configureAuth","ensureAuthenticatedUser","fetchAuthenticatedUser","hydrateAuthenticatedUser","getAuthenticatedUser","AxiosJwtAuthService","configureI18n","APP_PUBSUB_INITIALIZED","APP_CONFIG_INITIALIZED","APP_AUTH_INITIALIZED","APP_I18N_INITIALIZED","APP_LOGGING_INITIALIZED","APP_ANALYTICS_INITIALIZED","APP_READY","APP_INIT_ERROR","configureCache","history","window","basename","PUBLIC_PATH","initError","error","auth","requireUser","hydrateUser","globalThis","location","href","jsFileConfig","config","runtimeConfig","MFE_CONFIG_API_URL","APP_ID","apiConfig","headers","accept","apiService","params","URLSearchParams","append","url","toString","data","get","console","message","loadExternalScripts","externalScripts","forEach","ExternalScript","script","loadScript","analytics","authenticatedUser","userId","applyOverrideHandlers","overrides","noOp","_objectSpread","pubSub","logging","i18n","ready","initialize","_ref","loggingService","analyticsService","authService","authMiddleware","requireAuthenticatedUser","messages","handlers","overrideHandlers","loggingServiceImpl","analyticsServiceImpl","authServiceImpl","middleware","httpClient","isRedirecting"],"sources":["../src/initialize.js"],"sourcesContent":["/**\n * #### Import members from **@edx/frontend-platform**\n *\n * The initialization module provides a function for managing an application's initialization\n * lifecycle.  It also provides constants and default handler implementations.\n *\n * ```\n * import {\n *   initialize,\n *   APP_INIT_ERROR,\n *   APP_READY,\n *   subscribe,\n * } from '@edx/frontend-platform';\n * import { AppProvider, ErrorPage, PageWrap } from '@edx/frontend-platform/react';\n * import React from 'react';\n * import ReactDOM from 'react-dom';\n * import { Routes, Route } from 'react-router-dom';\n *\n * subscribe(APP_READY, () => {\n *   ReactDOM.render(\n *     <AppProvider store={configureStore()}>\n *       <Header />\n *       <main>\n *         <Routes>\n *           <Route path=\"/\" element={<PageWrap><PaymentPage /></PageWrap>} />\n *         </Routes>\n *       </main>\n *       <Footer />\n *     </AppProvider>,\n *     document.getElementById('root'),\n *   );\n * });\n *\n * subscribe(APP_INIT_ERROR, (error) => {\n *   ReactDOM.render(<ErrorPage message={error.message} />, document.getElementById('root'));\n * });\n *\n * initialize({\n *   messages: [appMessages],\n *   requireAuthenticatedUser: true,\n *   hydrateAuthenticatedUser: true,\n * });\n\n```\n * @module Initialization\n */\n\nimport { createBrowserHistory, createMemoryHistory } from 'history';\n/*\nThis 'env.config' package is a special 'magic' alias in our webpack configuration in frontend-build.\nIt points at an `env.config.js` file in the root of an MFE's repository if it exists and falls back\nto an empty object `{}` if the file doesn't exist.  This acts like an 'optional' import, in a sense.\nNote that the env.config.js file in frontend-platform's root directory is NOT used by the actual\ninitialization code, it's just there for the test suite and example application.\n*/\nimport envConfig from 'env.config'; // eslint-disable-line import/no-unresolved\nimport { getPath } from './utils';\nimport {\n  publish,\n} from './pubSub';\n// eslint-disable-next-line import/no-cycle\nimport {\n  getConfig, mergeConfig,\n} from './config';\nimport {\n  configure as configureLogging, getLoggingService, NewRelicLoggingService, logError,\n} from './logging';\nimport {\n  configure as configureAnalytics, SegmentAnalyticsService, identifyAnonymousUser, identifyAuthenticatedUser,\n} from './analytics';\nimport { GoogleAnalyticsLoader } from './scripts';\nimport {\n  getAuthenticatedHttpClient,\n  configure as configureAuth,\n  ensureAuthenticatedUser,\n  fetchAuthenticatedUser,\n  hydrateAuthenticatedUser,\n  getAuthenticatedUser,\n  AxiosJwtAuthService,\n} from './auth';\nimport { configure as configureI18n } from './i18n';\nimport {\n  APP_PUBSUB_INITIALIZED,\n  APP_CONFIG_INITIALIZED,\n  APP_AUTH_INITIALIZED,\n  APP_I18N_INITIALIZED,\n  APP_LOGGING_INITIALIZED,\n  APP_ANALYTICS_INITIALIZED,\n  APP_READY, APP_INIT_ERROR,\n} from './constants';\nimport configureCache from './auth/LocalForageCache';\n\n/**\n * A browser history or memory history object created by the [history](https://github.com/ReactTraining/history)\n * package.  Applications are encouraged to use this history object, rather than creating their own,\n * as behavior may be undefined when managing history via multiple mechanisms/instances. Note that\n * in environments where browser history may be inaccessible due to `window` being undefined, this\n * falls back to memory history.\n */\nexport const history = (typeof window !== 'undefined')\n  ? createBrowserHistory({\n    basename: getPath(getConfig().PUBLIC_PATH),\n  }) : createMemoryHistory();\n\n/**\n * The string basename that is the root directory of this MFE.\n *\n * In devstack, this should always just return \"/\", because each MFE is in its own server/domain.\n *\n * In Tutor, all MFEs are deployed to a common server, each under a different top-level directory.\n * The basename is the root path for a given MFE, e.g. \"/library-authoring\". It is set by tutor-mfe\n * as an ENV variable in the Docker file, and we read it here from that configuration so that it\n * can be passed into a Router later.\n */\nexport const basename = getPath(getConfig().PUBLIC_PATH);\n\n/**\n * The default handler for the initialization lifecycle's `initError` phase.  Logs the error to the\n * LoggingService using `logError`\n *\n * @see {@link module:frontend-platform/logging~logError}\n * @param {*} error\n */\nexport async function initError(error) {\n  logError(error);\n}\n\n/**\n * The default handler for the initialization lifecycle's `auth` phase.\n *\n * The handler has several responsibilities:\n * - Determining the user's authentication state (authenticated or anonymous)\n * - Optionally redirecting to login if the application requires an authenticated user.\n * - Optionally loading additional user information via the application's user account data\n * endpoint.\n *\n * @param {boolean} requireUser Whether or not we should redirect to login if a user is not\n * authenticated.\n * @param {boolean} hydrateUser Whether or not we should fetch additional user account data.\n */\nexport async function auth(requireUser, hydrateUser) {\n  if (requireUser) {\n    await ensureAuthenticatedUser(globalThis.location.href);\n  } else {\n    await fetchAuthenticatedUser();\n  }\n\n  if (hydrateUser && getAuthenticatedUser() !== null) {\n    // We intentionally do not await the promise returned by hydrateAuthenticatedUser. All the\n    // critical data is returned as part of fetch/ensureAuthenticatedUser above, and anything else\n    // is a nice-to-have for application code.\n    hydrateAuthenticatedUser();\n  }\n}\n\n/**\n * Set or overrides configuration via an env.config.js file in the consuming application.\n * This env.config.js is loaded at runtime and must export one of two things:\n *\n * - An object which will be merged into the application config via `mergeConfig`.\n * - A function which returns an object which will be merged into the application config via\n * `mergeConfig`.  This function can return a promise.\n */\nasync function jsFileConfig() {\n  let config = {};\n  if (typeof envConfig === 'function') {\n    config = await envConfig();\n  } else {\n    config = envConfig;\n  }\n\n  mergeConfig(config);\n}\n\n/*\n * Set or overrides configuration through an API.\n * This method allows runtime configuration.\n * Set a basic configuration when an error happen and allow initError and display the ErrorPage.\n */\nasync function runtimeConfig() {\n  try {\n    const { MFE_CONFIG_API_URL, APP_ID } = getConfig();\n\n    if (MFE_CONFIG_API_URL) {\n      const apiConfig = { headers: { accept: 'application/json' } };\n      const apiService = await configureCache();\n\n      const params = new URLSearchParams();\n      params.append('mfe', APP_ID);\n      const url = `${MFE_CONFIG_API_URL}?${params.toString()}`;\n\n      const { data } = await apiService.get(url, apiConfig);\n      mergeConfig(data);\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Error with config API', error.message);\n  }\n}\n\nexport function loadExternalScripts(externalScripts, data) {\n  externalScripts.forEach(ExternalScript => {\n    const script = new ExternalScript(data);\n    script.loadScript();\n  });\n}\n\n/**\n * The default handler for the initialization lifecycle's `analytics` phase.\n *\n * The handler is responsible for identifying authenticated and anonymous users with the analytics\n * service.  This is a pre-requisite for sending analytics events, thus, we do it during the\n * initialization sequence so that analytics is ready once the application's UI code starts to load.\n *\n */\nexport async function analytics() {\n  const authenticatedUser = getAuthenticatedUser();\n  if (authenticatedUser && authenticatedUser.userId) {\n    identifyAuthenticatedUser(authenticatedUser.userId);\n  } else {\n    await identifyAnonymousUser();\n  }\n}\n\nfunction applyOverrideHandlers(overrides) {\n  const noOp = async () => { };\n  return {\n    pubSub: noOp,\n    config: noOp,\n    logging: noOp,\n    auth,\n    analytics,\n    i18n: noOp,\n    ready: noOp,\n    initError,\n    ...overrides, // This will override any same-keyed handlers from above.\n  };\n}\n\n/**\n * Invokes the application initialization sequence.\n *\n * The sequence proceeds through a number of lifecycle phases, during which pertinent services are\n * configured.\n *\n * Using the `handlers` option, lifecycle phase handlers can be overridden to perform custom\n * functionality.  Note that while these override handlers _do_ replace the default handler\n * functionality for analytics, auth, and initError (the other phases have no default\n * functionality), they do _not_ override the configuration of the actual services that those\n * handlers leverage.\n *\n * Some services can be overridden via the loggingService and analyticsService options.  The other\n * services (auth and i18n) cannot currently be overridden.\n *\n * The following lifecycle phases exist:\n *\n * - pubSub: A no-op by default.\n * - config: A no-op by default.\n * - logging: A no-op by default.\n * - auth: Uses the 'auth' handler defined above.\n * - analytics: Uses the 'analytics' handler defined above.\n * - i18n: A no-op by default.\n * - ready: A no-op by default.\n * - initError: Uses the 'initError' handler defined above.\n *\n * @param {Object} [options]\n * @param {*} [options.loggingService=NewRelicLoggingService] The `LoggingService` implementation\n * to use.\n * @param {*} [options.analyticsService=SegmentAnalyticsService] The `AnalyticsService`\n * implementation to use.\n * @param {*} [options.authMiddleware=[]] An array of middleware to apply to http clients in the auth service.\n * @param {*} [options.externalScripts=[GoogleAnalyticsLoader]] An array of externalScripts.\n * By default added GoogleAnalyticsLoader.\n * @param {*} [options.requireAuthenticatedUser=false] If true, turns on automatic login\n * redirection for unauthenticated users.  Defaults to false, meaning that by default the\n * application will allow anonymous/unauthenticated sessions.\n * @param {*} [options.hydrateAuthenticatedUser=false] If true, makes an API call to the user\n * account endpoint (`${App.config.LMS_BASE_URL}/api/user/v1/accounts/${username}`) to fetch\n * detailed account information for the authenticated user. This data is merged into the return\n * value of `getAuthenticatedUser`, overriding any duplicate keys that already exist. Defaults to\n * false, meaning that no additional account information will be loaded.\n * @param {*} [options.messages] A i18n-compatible messages object, or an array of such objects. If\n * an array is provided, duplicate keys are resolved with the last-one-in winning.\n * @param {*} [options.handlers={}] An optional object of handlers which can be used to replace the\n * default behavior of any part of the startup sequence. It can also be used to add additional\n * initialization behavior before or after the rest of the sequence.\n */\nexport async function initialize({\n  loggingService = NewRelicLoggingService,\n  analyticsService = SegmentAnalyticsService,\n  authService = AxiosJwtAuthService,\n  authMiddleware = [],\n  externalScripts = [GoogleAnalyticsLoader],\n  requireAuthenticatedUser: requireUser = false,\n  hydrateAuthenticatedUser: hydrateUser = false,\n  messages,\n  handlers: overrideHandlers = {},\n}) {\n  const handlers = applyOverrideHandlers(overrideHandlers);\n  try {\n    // Pub/Sub\n    await handlers.pubSub();\n    publish(APP_PUBSUB_INITIALIZED);\n\n    // Configuration\n    await handlers.config();\n    await jsFileConfig();\n    await runtimeConfig();\n    publish(APP_CONFIG_INITIALIZED);\n\n    loadExternalScripts(externalScripts, {\n      config: getConfig(),\n    });\n\n    // This allows us to replace the implementations of the logging, analytics, and auth services\n    // based on keys in the ConfigDocument.  The JavaScript File Configuration method is the only\n    // one capable of supplying an alternate implementation since it can import other modules.\n    // If a service wasn't supplied we fall back to the default parameters on the initialize\n    // function signature.\n    const loggingServiceImpl = getConfig().loggingService || loggingService;\n    const analyticsServiceImpl = getConfig().analyticsService || analyticsService;\n    const authServiceImpl = getConfig().authService || authService;\n\n    // Logging\n    configureLogging(loggingServiceImpl, {\n      config: getConfig(),\n    });\n    await handlers.logging();\n    publish(APP_LOGGING_INITIALIZED);\n\n    // Internationalization\n    configureI18n({\n      messages,\n      config: getConfig(),\n      loggingService: getLoggingService(),\n    });\n    await handlers.i18n();\n    publish(APP_I18N_INITIALIZED);\n\n    // Authentication\n    configureAuth(authServiceImpl, {\n      loggingService: getLoggingService(),\n      config: getConfig(),\n      middleware: authMiddleware,\n    });\n\n    await handlers.auth(requireUser, hydrateUser);\n    publish(APP_AUTH_INITIALIZED);\n\n    // Analytics\n    configureAnalytics(analyticsServiceImpl, {\n      config: getConfig(),\n      loggingService: getLoggingService(),\n      httpClient: getAuthenticatedHttpClient(),\n    });\n    await handlers.analytics();\n    publish(APP_ANALYTICS_INITIALIZED);\n\n    // Application Ready\n    await handlers.ready();\n    publish(APP_READY);\n  } catch (error) {\n    if (!error.isRedirecting) {\n      // Initialization Error\n      await handlers.initError(error);\n      publish(APP_INIT_ERROR, error);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}