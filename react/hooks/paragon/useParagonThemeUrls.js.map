{"version":3,"file":"useParagonThemeUrls.js","names":["useMemo","fallbackThemeUrl","handleVersionSubstitution","isEmptyObject","useParagonThemeUrls","config","PARAGON_THEME_URLS","undefined","paragonThemeUrls","paragonCoreCssUrl","core","urls","default","url","brandCoreCssUrl","brandOverride","defaultThemeVariants","defaults","localParagonVersion","PARAGON_THEME","paragon","version","localBrandVersion","brand","coreCss","wildcardKeyword","localVersion","themeVariantsCss","themeVariantsEntries","Object","entries","variants","forEach","_ref","themeVariant","themeVariantMetadata","localCoreUrl","themeUrls","localThemeVariants","fileName","_ref3","_ref2","rest","_objectWithoutProperties","_excluded","_objectSpread"],"sources":["../../../../src/react/hooks/paragon/useParagonThemeUrls.js"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { fallbackThemeUrl, handleVersionSubstitution, isEmptyObject } from './utils';\n\n/**\n * Returns an object containing the URLs for the theme's core CSS and any theme variants.\n *\n * @param {*} config\n * @returns {ParagonThemeUrls|undefined} An object containing the URLs for the theme's core CSS and any theme variants.\n */\nconst useParagonThemeUrls = (config) => useMemo(() => {\n  if (!config?.PARAGON_THEME_URLS) {\n    return undefined;\n  }\n  const paragonThemeUrls = config.PARAGON_THEME_URLS;\n  const paragonCoreCssUrl = typeof paragonThemeUrls?.core?.urls === 'object' ? paragonThemeUrls.core.urls.default : paragonThemeUrls?.core?.url;\n  const brandCoreCssUrl = typeof paragonThemeUrls?.core?.urls === 'object' ? paragonThemeUrls.core.urls.brandOverride : undefined;\n  const defaultThemeVariants = paragonThemeUrls.defaults;\n\n  // Local versions of @openedx/paragon and @edx/brand\n  const localParagonVersion = PARAGON_THEME?.paragon?.version;\n  const localBrandVersion = PARAGON_THEME?.brand?.version;\n\n  const coreCss = {\n    default: handleVersionSubstitution({ url: paragonCoreCssUrl, wildcardKeyword: '$paragonVersion', localVersion: localParagonVersion }),\n    brandOverride: handleVersionSubstitution({ url: brandCoreCssUrl, wildcardKeyword: '$brandVersion', localVersion: localBrandVersion }),\n  };\n  const themeVariantsCss = {};\n  const themeVariantsEntries = Object.entries(paragonThemeUrls.variants || {});\n  themeVariantsEntries.forEach(([themeVariant, { url, urls }]) => {\n    const themeVariantMetadata = { urls: null };\n    if (url) {\n      themeVariantMetadata.urls = {\n        default: handleVersionSubstitution({\n          url,\n          wildcardKeyword: '$paragonVersion',\n          localVersion: localParagonVersion,\n        }),\n      };\n    } else {\n      themeVariantMetadata.urls = {\n        default: handleVersionSubstitution({\n          url: urls.default,\n          wildcardKeyword: '$paragonVersion',\n          localVersion: localParagonVersion,\n        }),\n        brandOverride: handleVersionSubstitution({\n          url: urls.brandOverride,\n          wildcardKeyword: '$brandVersion',\n          localVersion: localBrandVersion,\n        }),\n      };\n    }\n    themeVariantsCss[themeVariant] = themeVariantMetadata;\n  });\n\n  // If we don't have  the core default or any theme variants, use the PARAGON_THEME\n  if (!coreCss.default || isEmptyObject(themeVariantsCss)) {\n    const localCoreUrl = PARAGON_THEME.paragon?.themeUrls?.core;\n    const localThemeVariants = PARAGON_THEME.paragon?.themeUrls?.variants;\n\n    if (isEmptyObject(localCoreUrl) || isEmptyObject(localThemeVariants)) {\n      return undefined;\n    }\n    if (!coreCss.default) {\n      coreCss.default = fallbackThemeUrl(localCoreUrl?.fileName);\n    }\n\n    if (isEmptyObject(themeVariantsCss)) {\n      Object.entries(localThemeVariants).forEach(([themeVariant, { fileName, ...rest }]) => {\n        themeVariantsCss[themeVariant] = {\n          urls: { default: fallbackThemeUrl(fileName), ...rest.urls },\n        };\n      });\n    }\n    return {\n      core: { urls: coreCss },\n      defaults: defaultThemeVariants,\n      variants: themeVariantsCss,\n    };\n  }\n\n  return {\n    core: { urls: coreCss },\n    defaults: defaultThemeVariants,\n    variants: themeVariantsCss,\n  };\n}, [config?.PARAGON_THEME_URLS]);\n\nexport default useParagonThemeUrls;\n"],"mappings":"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","ignoreList":[]}