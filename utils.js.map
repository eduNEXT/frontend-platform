{"version":3,"file":"utils.js","names":["camelCase","snakeCase","modifyObjectKeys","object","modify","undefined","Array","isArray","map","value","result","Object","entries","forEach","key","camelCaseObject","snakeCaseObject","convertKeyNames","nameMap","transformer","getQueryParameters","search","global","location","keyValueFragments","slice","indexOf","split","filter","hash","reduce","params","keyValueFragment","assign","decodeURIComponent","ensureDefinedConfig","requester","keys","console","warn"],"sources":["../src/utils.js"],"sourcesContent":["/**\n * #### Import members from **@edx/frontend-platform**\n *\n * @module Utilities\n */\nimport camelCase from 'lodash.camelcase';\nimport snakeCase from 'lodash.snakecase';\n\n/**\n * This is the underlying function used by camelCaseObject, snakeCaseObject, and convertKeyNames\n * above.\n *\n * Given an object (or array) and a modification function, will perform the function on each key it\n * encounters on the object and its tree of children.\n *\n * The modification function must take a string as an argument and returns a string.\n *\n * Example:\n *\n * ```\n * (key) => {\n *   if (key === 'edX') {\n *     return 'Open edX';\n *   }\n *   return key;\n * }\n * ```\n *\n * This function will turn any key that matches 'edX' into 'Open edX'.  All other keys will be\n * passed through unmodified.\n *\n * Can accept arrays as well as objects, and will perform its conversion on any objects it finds in\n * the array.\n *\n * @param {Object} object\n * @param {function} modify\n * @returns {Object}\n */\nexport function modifyObjectKeys(object, modify) {\n  // If the passed in object is not an Object, return it.\n  if (\n    object === undefined\n    || object === null\n    || (typeof object !== 'object' && !Array.isArray(object))\n  ) {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    return object.map(value => modifyObjectKeys(value, modify));\n  }\n\n  // Otherwise, process all its keys.\n  const result = {};\n  Object.entries(object).forEach(([key, value]) => {\n    result[modify(key)] = modifyObjectKeys(value, modify);\n  });\n  return result;\n}\n\n/**\n * Performs a deep conversion to camelCase on all keys in the provided object and its tree of\n * children.  Uses [lodash.camelcase](https://lodash.com/docs/4.17.15#camelCase) on each key.  This\n * is commonly used to convert snake_case keys in models from a backend server into camelCase keys\n * for use in the JavaScript client.\n *\n * Can accept arrays as well as objects, and will perform its conversion on any objects it finds in\n * the array.\n *\n * @param {Array|Object} object\n * @returns {Array|Object}\n */\nexport function camelCaseObject(object) {\n  return modifyObjectKeys(object, camelCase);\n}\n\n/**\n * Performs a deep conversion to snake_case on all keys in the provided object and its tree of\n * children.  Uses [lodash.snakecase](https://lodash.com/docs/4.17.15#snakeCase) on each key.  This\n * is commonly used to convert camelCase keys from the JavaScript app into snake_case keys expected\n * by backend servers.\n *\n * Can accept arrays as well as objects, and will perform its conversion on any objects it finds in\n * the array.\n *\n * @param {Array|Object} object\n * @returns {Array|Object}\n */\nexport function snakeCaseObject(object) {\n  return modifyObjectKeys(object, snakeCase);\n}\n\n/**\n * Given a map of key-value pairs, performs a deep conversion key names in the specified object\n * _from_ the key _to_ the value.  This is useful for updating names in an API request to the names\n * used throughout a client application if they happen to differ.  It can also be used in the\n * reverse - formatting names from the client application to names expected by an API.\n *\n * ```\n * import { convertKeyNames } from '@edx/frontend-base';\n *\n * // This object can be of any shape or depth with subobjects/arrays.\n * const myObject = {\n *   myKey: 'my value',\n * }\n *\n * const result = convertKeyNames(myObject, { myKey: 'their_key' });\n *\n * console.log(result) // { their_key: 'my value' }\n * ```\n *\n * Can accept arrays as well as objects, and will perform its conversion on any objects it finds in\n * the array.\n *\n * @param {Array|Object} object\n * @param {Object} nameMap\n * @returns {Array|Object}\n */\nexport function convertKeyNames(object, nameMap) {\n  const transformer = key => (nameMap[key] === undefined ? key : nameMap[key]);\n\n  return modifyObjectKeys(object, transformer);\n}\n\n/**\n * *Deprecated*: A method which converts the supplied query string into an object of\n * key-value pairs and returns it.  Defaults to the current query string - should perform like\n * [window.searchParams](https://developer.mozilla.org/en-US/docs/Web/API/URL/searchParams)\n *\n * @deprecated\n * @param {string} [search=global.location.search]\n * @returns {Object}\n */\nexport function getQueryParameters(search = global.location.search) {\n  const keyValueFragments = search\n    .slice(search.indexOf('?') + 1)\n    .split('&')\n    .filter(hash => hash !== '');\n\n  return keyValueFragments.reduce((params, keyValueFragment) => {\n    const split = keyValueFragment.indexOf('=');\n    const key = keyValueFragment.slice(0, split);\n    const value = keyValueFragment.slice(split + 1);\n    return Object.assign(params, { [key]: decodeURIComponent(value) });\n  }, {});\n}\n\n/**\n * This function helps catch a certain class of misconfiguration in which configuration variables\n * are not properly defined and/or supplied to a consumer that requires them.  Any key that exists\n * is still set to \"undefined\" indicates a misconfiguration further up in the application, and\n * should be flagged as an error, and is logged to 'warn'.\n *\n * Keys that are intended to be falsy should be defined using null, 0, false, etc.\n *\n * @param {Object} object\n * @param {string} requester A human-readable identifier for the code which called this function.\n * Used when throwing errors to aid in debugging.\n */\nexport function ensureDefinedConfig(object, requester) {\n  Object.keys(object).forEach((key) => {\n    if (object[key] === undefined) {\n      // eslint-disable-next-line no-console\n      console.warn(`Module configuration error: ${key} is required by ${requester}.`);\n    }\n  });\n}\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,kBAAkB;AACxC,OAAOC,SAAS,MAAM,kBAAkB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgB,CAACC,MAAM,EAAEC,MAAM,EAAE;EAC/C;EACA,IACED,MAAM,KAAKE,SAAS,IACjBF,MAAM,KAAK,IAAI,IACd,QAAOA,MAAM,MAAK,QAAQ,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAE,EACzD;IACA,OAAOA,MAAM;EACf;EAEA,IAAIG,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;IACzB,OAAOA,MAAM,CAACK,GAAG,CAAC,UAAAC,KAAK;MAAA,OAAIP,gBAAgB,CAACO,KAAK,EAAEL,MAAM,CAAC;IAAA,EAAC;EAC7D;;EAEA;EACA,IAAMM,MAAM,GAAG,CAAC,CAAC;EACjBC,MAAM,CAACC,OAAO,CAACT,MAAM,CAAC,CAACU,OAAO,CAAC,gBAAkB;IAAA;MAAhBC,GAAG;MAAEL,KAAK;IACzCC,MAAM,CAACN,MAAM,CAACU,GAAG,CAAC,CAAC,GAAGZ,gBAAgB,CAACO,KAAK,EAAEL,MAAM,CAAC;EACvD,CAAC,CAAC;EACF,OAAOM,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,eAAe,CAACZ,MAAM,EAAE;EACtC,OAAOD,gBAAgB,CAACC,MAAM,EAAEH,SAAS,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASgB,eAAe,CAACb,MAAM,EAAE;EACtC,OAAOD,gBAAgB,CAACC,MAAM,EAAEF,SAAS,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASgB,eAAe,CAACd,MAAM,EAAEe,OAAO,EAAE;EAC/C,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAGL,GAAG;IAAA,OAAKI,OAAO,CAACJ,GAAG,CAAC,KAAKT,SAAS,GAAGS,GAAG,GAAGI,OAAO,CAACJ,GAAG,CAAC;EAAA,CAAC;EAE5E,OAAOZ,gBAAgB,CAACC,MAAM,EAAEgB,WAAW,CAAC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkB,GAAkC;EAAA,IAAjCC,MAAM,uEAAGC,MAAM,CAACC,QAAQ,CAACF,MAAM;EAChE,IAAMG,iBAAiB,GAAGH,MAAM,CAC7BI,KAAK,CAACJ,MAAM,CAACK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAC9BC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,UAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,EAAE;EAAA,EAAC;EAE9B,OAAOL,iBAAiB,CAACM,MAAM,CAAC,UAACC,MAAM,EAAEC,gBAAgB,EAAK;IAC5D,IAAML,KAAK,GAAGK,gBAAgB,CAACN,OAAO,CAAC,GAAG,CAAC;IAC3C,IAAMZ,GAAG,GAAGkB,gBAAgB,CAACP,KAAK,CAAC,CAAC,EAAEE,KAAK,CAAC;IAC5C,IAAMlB,KAAK,GAAGuB,gBAAgB,CAACP,KAAK,CAACE,KAAK,GAAG,CAAC,CAAC;IAC/C,OAAOhB,MAAM,CAACsB,MAAM,CAACF,MAAM,sBAAKjB,GAAG,EAAGoB,kBAAkB,CAACzB,KAAK,CAAC,EAAG;EACpE,CAAC,EAAE,CAAC,CAAC,CAAC;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS0B,mBAAmB,CAAChC,MAAM,EAAEiC,SAAS,EAAE;EACrDzB,MAAM,CAAC0B,IAAI,CAAClC,MAAM,CAAC,CAACU,OAAO,CAAC,UAACC,GAAG,EAAK;IACnC,IAAIX,MAAM,CAACW,GAAG,CAAC,KAAKT,SAAS,EAAE;MAC7B;MACAiC,OAAO,CAACC,IAAI,uCAAgCzB,GAAG,6BAAmBsB,SAAS,OAAI;IACjF;EACF,CAAC,CAAC;AACJ"}